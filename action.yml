name: Setup Redmine
description: Setup Redmine or its distribution for testing
author: hidakatsuya
branding:
  icon: download
  color: blue

inputs:
  repository:
    description: "Redmine repository to setup. Default is redmine/redmine."
    required: true
    default: "redmine/redmine"
  version:
    description: "The branch, tag or commit to checkout. Default is master."
    required: true
    default: "master"
  database:
    description: "Database to use for testing. Possible values are sqlite3 or PostgreSQL and MySQL Docker official image tags (e.g. postgres:14, mysql:8.4.0). Default is sqlite3"
    required: true
    default: "sqlite3"
  ruby-version:
    description: "Ruby version to use for testing. See ruby/setup-ruby's ruby-version input for available versions."
    required: true
  path:
    description: "Directory to setup Redmine. Default is the current directory."
    required: true
    default: "."

runs:
  using: composite

  steps:
    - name: Set up environment
      run: |
        echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
        echo "RAILS_ENV=test" >> $GITHUB_ENV
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Checkout Redmine source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.version }}
        path: ${{ inputs.path }}

    - name: Define Redmine version environment variables
      run: $GITHUB_ACTION_PATH/scripts/set-version-envs.sh
      shell: bash
      env:
        REDMINE_DIR: ${{ inputs.path }}

    - name: Check if the Redmine version is supported
      run: |
        if [ $REDMINE_MAJOR_VERSION_NUMNER -lt $MINIUMUM_SUPPORTED_REDMINE_VERSION ]; then
          echo "Redmine version $REDMINE_VERSION is not supported."
          exit 1
        fi
      shell: bash
      env:
        MINIUMUM_SUPPORTED_REDMINE_VERSION: "500" # v5.0.0

    - name: Set up base environment
      run: $GITHUB_ACTION_PATH/scripts/setup-base.sh
      shell: bash
      env:
        REDMINE_DIR: ${{ inputs.path }}

    - name: Set up PostgreSQL database
      if: ${{ startsWith(inputs.database, 'postgres:') }}
      run: $GITHUB_ACTION_PATH/scripts/setup-db-postgresql.sh
      shell: bash
      env:
        REDMINE_DIR: ${{ inputs.path }}
        DATABASE: ${{ inputs.database }}

    - name: Set up MySQL database
      if: ${{ startsWith(inputs.database, 'mysql:') }}
      run: $GITHUB_ACTION_PATH/scripts/setup-db-mysql.sh
      shell: bash
      env:
        REDMINE_DIR: ${{ inputs.path }}
        DATABASE: ${{ inputs.database }}

    - name: Set up SQLite3 database
      if: ${{ inputs.database == 'sqlite3' }}
      run: $GITHUB_ACTION_PATH/scripts/setup-db-sqlite3.sh
      shell: bash
      env:
        REDMINE_DIR: ${{ inputs.path }}

    - name: Set up Ruby and install dependencies
      uses: ruby/setup-ruby@1a615958ad9d422dd932dc1d5823942ee002799f # v1.227.0
      with:
        ruby-version: ${{ inputs.ruby-version }}
        bundler-cache: true
        working-directory: ${{ inputs.path }}

    - name: Set up database
      run: |
        bin/rails db:create db:migrate
      shell: bash
      working-directory: ${{ inputs.path }}
